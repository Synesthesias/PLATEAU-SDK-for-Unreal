{
  "index.html": {
    "href": "index.html",
    "title": "PLATEAU SDK for Unreal | PLATEAU SDK for Unreal",
    "keywords": "PLATEAU SDK for Unreal このパッケージには、 PLATEAU の3D都市モデルデータを利用するためのAPI、サンプルが含まれます。PLATEAU SDK for Unrealを利用することで、実世界を舞台にしたアプリケーションの開発や、PLATEAUの豊富なデータを活用したシミュレーションを簡単に行うことができます。"
  },
  "manual/AccessCityObject.html": {
    "href": "manual/AccessCityObject.html",
    "title": "属性情報へのアクセス | PLATEAU SDK for Unreal",
    "keywords": "属性情報へのアクセス このページではブループリントを利用して3D都市モデルの属性情報にアクセスする方法を記載します。 3D都市モデルのロード サンプルとしてマウスをクリックした際にカメラの中心に位置する都市オブジェクトの属性情報を画面に表示するスクリプトを紹介します。 ブループリントの利用 SDKにはサンプルのブループリントが含まれています。 確認するには、コンテンツブラウザで 設定 → プラグインコンテンツを表示 にチェックを入れ、次の場所にあるブループリントを開いてください： Plugins/PLATEAU SDK for Unreal コンテンツ/Samples/AttributeLoadSample/ClickToGetAttribute このブループリントを利用するには次のようにします： 都市モデルをインポートしたレベルに ClickToGetAttribute を配置します。 配置した ClickToGetAttribute の詳細パネルから以下を設定します。 CityModel 欄にインポートした都市モデルを割り当て Auto Receive Input を Player 0 に設定 ウィンドウ/ワールドセッティング の GameMode/ゲームモードオーバーライド を ClickEventGameMode に指定します。 再生して都市オブジェクトをクリックすると属性情報が表示されます。 ブループリントの説明 マウスクリックに LineTrace を飛ばす クリック位置の CityObjectID を取得する CityModel 変数には属性情報を取得したい PLATEAUInstancedCityModel アクタを設定します。 PLATEAUInstancedCityModel アクタは都市モデルをインポートすることによって生成されます。 GetCityObjectInfo ノードは Component を受け取って都市オブジェクトにアクセスするために必要な情報 PLATEAUCityObjectInfo を出力します。 PLATEAUCityObjectInfo の ID から、個々の都市オブジェクトのIDを取得できます。 GMLファイルをパースし、CityObjectIDに対応する属性情報を取得する LoadAsync ノードは非同期でCityGMLのパースを行い、 CityModel インスタンスを出力します。 GetCityObjectByID ノードは CityModel インスタンスと FeatureID を受け取り、対応する CityObject インスタンスを出力します。 CityObject は属性情報を持ちます。属性情報はキーと値のペアのセットです。 GetAttributeMap ノードは CityObject インスタンスを受け取り、都市オブジェクトが持つ属性情報を AttributeMap インスタンスとして出力します。 都市オブジェクトの属性情報の表示 属性とは 都市オブジェクトの情報は「属性」として取得できます。 属性は例えば (String) 大字・町コード => 42, (String) 防火及び準防火地域 => 準防火地域 のように、キーと値のペアからなる辞書形式の情報です。 属性辞書は CityObject.AttributesSet メソッドで取得できます。 AttributesSet.ToString() をコールすると、属性情報をすべて文字列にして返します。 AttributesSet.GetValueOrNull(\"key\") によってキーに対応する AttributeValue を取得できます。 AttributeValue の具体的な値は文字列型として取得できるか、または 子の属性（属性は入れ子になることもあります）として取得できるかのいずれかです。 属性が入れ子になっている例は次のとおりです。 (AttributeSet) 多摩水系多摩川、浅川、大栗川洪水浸水想定区域（想定最大規模） => [ { (String) 浸水ランク => 2 } { (Measure) 浸水深 => 0.990 } { (Measure) 継続時間 => 0.68 } { (String) 規模 => L2 } ] 上の例において、(括弧)内の文字は属性の型を示します。 属性値は次の型があります。: AttributeSet, String, Double, Integer, Data, Uri, Measure AttributeSet以外の型はすべて内部的には文字列型であり、 AttributeValue.AsString で値を取得できます。 入れ子AttributeSetの値は AsString ではなく AttributeValue.AsAttrSet で取得できます。 属性値の型は AttributeValue.Type で取得でき、この値が AttributeSet である場合は AttributeValue.AsAttrSet で子の AttributesMap を取得できます。 AttributeValue.Type がそれ以外 (String, Doubleなど) である場合は AttributeValue.AsString で文字列を取得できます。"
  },
  "manual/ExportCityModels.html": {
    "href": "manual/ExportCityModels.html",
    "title": "3D都市モデルのエクスポート | PLATEAU SDK for Unreal",
    "keywords": "3D都市モデルのエクスポート このページではワールドに配置された3D都市モデルをOBJ形式またはglTF形式でエクスポートする手順を説明します。 前提 ワールド内に3D都市モデルがインポートされていることが前提です。 インポートの方法については 3D都市モデルのインポート をご覧ください。 エクスポート手順 エクスポート対象の指定 メニューバーから PLATEAU → PLATEAU SDK を選択し、エクスポートを開きます。 エクスポート対象をアウトライナーから選択します。 オプションを設定し、 モデルをエクスポート ボタンを押します。"
  },
  "manual/FilterCityModels.html": {
    "href": "manual/FilterCityModels.html",
    "title": "3D都市モデルのフィルタリング | PLATEAU SDK for Unreal",
    "keywords": "3D都市モデルのフィルタリング このページでは3D都市モデルに含まれる各地物のフィルタリング方法を記載します。 モデル調整タブ Unrealのメニューバーから PLATEAU → PLATEAU SDK を選択します。 ウィンドウ上部のタブのうち モデル調整 を選択します。 この画面で条件指定をしてフィルタリングをおこなえます。 ここでいうフィルタリングとは、条件に合致するゲームオブジェクトをアクティブにし、そうでないものを非アクティブにすることを指します。 「重複する地物を表示」にチェックを入れた場合、フィルタリング後に重複している地物について、 もっともLODが高いもののみを残してそれ以外を非表示にします。 表示したい地物の種類をチェックボックスで指定します。 チェックボックスは入れ子構造になっています。 第1階層のチェックボックスは、「建築物」「道路」などのパッケージ種別を指定します。 複数のLODがシーン中に存在する場合、パッケージ種別ごとにLOD範囲選択のスライダーを使ってLODを指定できます。 第2階層のチェックボックスは、「ドア」「屋根」など細かい都市オブジェクト分類での種別を指定します。 Note 都市インポート時のメッシュ結合単位の設定によっては、第2階層の分類チェックマークが動作しない場合があります。 例えば、インポート時に建物を「最小地物単位」に指定した場合、「窓」「屋根面」などでゲームオブジェクトが分かれているので、細かい分類のチェックマークが動作します。 しかし、建物を「主要地物単位」にした場合、建物ごとにゲームオブジェクトが結合されているので、細かい「窓」「屋根面」といった分類は動作しません。 分類指定のチェックマークは入れ子構造になっていますが、第1階層の「建築物」「道路」といった分類は結合単位によらず必ず動作し、 第2階層の「窓」「屋根面」といった細かい分類はインポート時に「最小値物単位」にした場合のみ動作します。"
  },
  "manual/ImportCityModels.html": {
    "href": "manual/ImportCityModels.html",
    "title": "3D都市モデルのインポート | PLATEAU SDK for Unreal",
    "keywords": "3D都市モデルのインポート このページでは、都市データをUE5のプロジェクトにインポートする手順を説明します。 準備 PLATEAU SDK for Unreal を導入したUE5プロジェクトを用意します。 SDKの導入方法は インストール を参照してください。 インポート手順 インポート元の選択 Unreal Engineのメニューバーから PLATEAU → PLATEAU SDK を選択します。 表示されるウィンドウの上部に3つのタブ「インポート、モデル調整、エクスポート」があります。 このうちインポートを選択します。 インポート元で ローカル か サーバー を選択します。 ローカルからインポートする場合 導入したい都市データが自分のコンピュータにある場合はローカルを選択します。3D都市モデルは G空間情報センターのPLATEAUポータルサイト からダウンロードできます。 参照 ボタンを押します。都市データのフォルダの選択画面が表示されます。 都市データのフォルダの中には、 udx , codelists という名前のフォルダがあるはずです。 udx から 階層が1つ上 のフォルダを選択します。 サーバーからインポートする場合 サーバー では、PLATEAUのデータサーバーから直接3D都市モデルをインポートできます。 接続先設定 の欄がありますが、設定しなくとも自動でデフォルトのURLに接続されます。 別のURLに接続したい場合のみ、URLを入力して「サーバーデータ更新」ボタンを押してください。 トークン は Bearer認証のトークンです。 データセットの選択 で 都道府県 を選択します。 するとその都道府県に対応する データセット が選択肢に出てくるので選びます。 基準座標系の選択 リストのうち、都市が属する場所として近いものを選択します。 適切なものを選ぶと座標の誤差が小さくなります。 ここで選択する座標系は国土交通省が定める平面直角座標系に準拠しています。 詳しくは 国土地理院のWebサイト「わかりやすい平面直角座標系」 をご覧ください。 インポート範囲の選択 範囲選択 ボタンを押すと範囲選択画面が開きます。 範囲選択画面の操作方法： マウスホイールを上下に回してズームアウト、ズームインします。 マウスクリックしたままドラッグしてカメラ移動します。 オレンジ色の球体をドラッグして範囲を選択します。 ビューポート左上の決定ボタンを押して範囲を確定します。 画面のみかた： 青色の線は利用可能な地域を示します。 地域ごとに利用可能な地物種類とLODがアイコン形式で表示されます。(地形、災害リスクなど、アイコンとして表示されない地物も一部存在します。) 地図は国土地理院のサイトから自動でダウンロードされて表示されます。インターネットへの接続が必要です。 区域に表示される番号は、後述の indexmap.pdf に記載の番号と同じです。 補足 : 地域の区分を確認したい時は、ローカルにダウンロードしたフォルダに付属している indexmap という名前のpdfファイルをご覧ください。 下図のように地図上に区分が記載されています。 地物別設定 地物の種類ごとにインポートに関する設定を行います。 設定項目について: インポートする チェックが付いている地物タイプのみインポートします。 テクスチャを含める テクスチャが存在する地物タイプで表示される設定項目です。 チェックが付いていて、かつテクスチャがある場合はそれを含めてインポートします。 都市データによってはテクスチャがない場合があり、 その場合はチェックを外した時と同様に真っ白な3Dモデルが出力されます。 最小LOD , 最大LOD 複数のLODを利用可能な地物タイプで表示される設定項目です。 Note LODとは gmlファイルの中には、3D都市モデルの形状の細かさを指定したいという需要に対応するため、 複数の形状データが格納されている場合があります。 LOD0がもっとも大雑把な形状で、LOD1, LOD2 と数字が上がるほど細かい形状になります。 建築物の場合、LOD0 は平面、LOD1は平面に一定の高さを付けたもの、LOD2はより細かい形状です。 なお、ここでいう LOD とは PLATEAU の仕様上の LOD を指します。 Unreal Engine の機能としての LOD とは異なる概念です。 モデル結合 主要地物単位（建築物,道路等） モデルのメッシュは建物ごとに結合されて出力されます。 建物ごとに地物データを取得できるようにしたい場合はこちらを選択します。 最小地物単位（壁面,屋根面等） 屋根、壁単位など非常に細かくオブジェクトを分けたい場合はこちらを選択します。 地域単位 モデルのメッシュは結合されて出力されます。 オブジェクト数を削減して軽量化できますが、建物ごとの地物データは取得不可になります。 メッシュの結合はある程度の大きさの範囲ごとに行われます。 Note 地物の選択について 地物の中にはインポートに時間がかかるものもあるのでご注意ください。 例えば 土地起伏 はデータの範囲が 10km × 10km と非常に広く、 データ容量が重く処理に時間がかかるのでご注意ください。 基準座標系からのオフセット値の設定 3Dモデルの原点をどこに置くかを指定します。 デフォルト値として、選択範囲の中心位置が自動入力されるので、 このままの値でインポート可能です。 3Dモデルの原点位置を調整したい場合のみ値を編集してください。 値の意味: 上のインポート設定で選択した「基準座標系」の原点から、 東西・南北・高さ方向にそれぞれ何メートルの地点を3Dモデルの原点とするかを表します。 基準座標系の原点は次の国土地理院のWebサイトで示されます: 国土地理院のサイト インポートの実行 モデルをインポート ボタンを押します。 処理が進むと、都市のオブジェクトが順次シーンに配置されていきます。 進捗表示がすべて「完了」になったらインポート終了です。 インポートのキャンセル インポート処理中に インポートをキャンセルする ボタンを押します。 キャンセル処理中は、ボタンが キャンセル中… の表記に変わります。 再度 モデルをインポート ボタンが表示されたらキャンセル完了です。 読み込み状況の確認 PLATEAUCityModelLoaderアクタの詳細パネルから読み込み状況の確認ができます。 原点情報の確認 インポートした3D都市モデルは原点付近に位置するようにオフセットがかけられます。 原点情報はPLATEAUInstancedCityModelアクタの詳細パネルから確認が可能です。"
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "インストール | PLATEAU SDK for Unreal",
    "keywords": "インストール 対応Unrealバージョンのインストール Unreal Engineの対応バージョンについて、 リリースページ に記載のバージョンを利用してください。 Epic Games Launcher から指定のバージョンをインストールできます。 Unrealプロジェクトの作成 先ほどインストールしたバージョンを起動します。 適宜設定を行い 作成 を押します。 PLATEAU SDK for Unrealの導入 リリースページ から提供されている PLATEAU-SDK-for-Unreal-{バージョン名}.zip をダウンロードします。 作成したプロジェクトのフォルダに Plugins という名前のフォルダを作成し、先程ダウンロードしたSDKを解凍しコピーします。 ( Plugins フォルダの作成は、 Unreal Engine のコンテンツブラウザからではなく、エクスプローラで作成してください。) Plugins/PLATEAU-SDK-for-Unreal/PLATEAU-SDK-for-Unreal.uplugin が存在することを確認します。 プロジェクトを開きます。既にプロジェクトを開いている場合は一度閉じてから再度プロジェクトを開いてください。 プロジェクトを開く際に以下の画面が表示される場合は はい を押して完了です。 エディタ設定の変更(推奨) 自動再インポート対象の除外 エディタの環境設定 から ロード＆保存中 → 監査するディレクトリ → インデックス[0] を選択します。 除外対象として PLATEAU/Datasets/* を追加します。 この操作を行わない場合、取得されたgmlファイル等の生データを手動でインポート対象から除外する必要があります。 距離スケーリング済みのカメラ速度を使用 エディタの環境設定 から 距離スケーリング で検索します。 距離スケーリング済みのカメラ速度を使用 にチェックを入れます。 この操作を行うことで広域なマップでの操作性が向上します。 プラグインをビルドする場合 Windowsの場合、 Visual Studio の利用を想定しています。 Visual Studio についても、 リリースページ に記載のバージョンを利用してください。 バージョンが違うとビルドに失敗する場合があります。 Visual Studio のインストール時は、 こちらの手順に従って 追加のコンポーネントをインストールしてください。 MacOSの場合、Xcode がインストールされていることが前提となります。"
  }
}